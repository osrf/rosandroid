/**
\mainpage
\htmlinclude manifest.html

@section Overview

I've checked out the latest sources for the jmdns project and dumped them into a ros package.
This just compiles the jar library file (not the tools).

Currently it serves mostly to help develop the android jmdns package (developing/testing on
the pc is easier than the android), though feasibly it could be developed to the level of 
the zeroconf_avahi class.

@section original Original Package

The original jmdns download:

@code
svn co https://jmdns.svn.sourceforge.net/svnroot/jmdns/trunk@321 ./jmdns
@endcode

I've copied the sources into the src directory and also grabbed the pom file. Note that
the groupID, artifactID and version in the manifest.xml have to match with the pom file
specifications.

The original download can be built with 'ant jar'. It has a few tools you can use for 
testing. For publishing:

@code
java -jar jmdns.jar -rs foobar _concert-master._tcp local. 1234
@endcode

For browsing:

@code
java -jar jmdns.jar -browse
@endcode

@section Modifications

Might have missed a couple of early ones

 - I think its in list(), using a set instead of list to guarantee uniquess
 - jmdns::removeServiceListener we check for service infos and trigger serviceRemoved callbacks
 - jmmdns::isClosed(), jmmdns::getInstance(), hack to create new instances (null or after closing) 

This is important on android because when the app calls onDestroy, it doesn't kill the actual
process (faster startup times). If you don't kill the actual process, then static class variables
aren't cleaned. Normal variables are cleaned though.
*/
